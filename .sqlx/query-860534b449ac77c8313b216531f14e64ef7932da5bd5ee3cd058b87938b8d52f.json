{
  "db_name": "MySQL",
  "query": "\n                WITH RECURSIVE subject_mapping AS (\n                    SELECT\n                        subject.id AS term_taxonomy_id,\n                        subject.id AS subject_id,\n                        root.id AS root_id\n                    FROM term_taxonomy root\n                    JOIN term_taxonomy subject ON subject.parent_id = root.id\n                    WHERE root.parent_id IS NULL\n                    OR root.id IN (106081, 146728)\n\n                    UNION\n\n                    SELECT\n                        child.id,\n                        subject_mapping.subject_id,\n                        subject_mapping.root_id\n                    FROM term_taxonomy child\n                    JOIN subject_mapping ON subject_mapping.term_taxonomy_id = child.parent_id\n                    -- \"FÃ¤cher im Aufbau\" taxonomy is on the level of normal Serlo subjects, therefore we need a level below it.\n                    -- \"Partner\" taxonomy is below the subject \"Mathematics\", but we only want the entities with the specific partner as the subject.\n                    WHERE child.parent_id NOT IN (106081, 146728)\n                        -- Exclude content under \"Baustelle\" taxonomy.\n                        AND child.id NOT IN (75211, 105140, 107772, 135390)\n                )\n                SELECT\n                    entity.id,\n                    JSON_ARRAYAGG(subject_mapping.subject_id) AS subject_ids,\n                    type.name AS resource_type,\n                    MIN(field_title.value) AS title,\n                    MIN(field_description.value) AS description,\n                    entity.date AS date_created,\n                    entity_revision.date AS date_modified,\n                    entity.current_revision_id AS version,\n                    license.url AS license_url,\n                    license.original_author_url,\n                    instance.subdomain AS instance,\n                    JSON_ARRAYAGG(term_taxonomy.id) AS taxonomy_term_ids,\n                    JSON_OBJECTAGG(term_taxonomy.id, term.name) AS term_names,\n                    JSON_OBJECTAGG(user.id, user.username) AS authors,\n                    JSON_OBJECTAGG(all_revisions_of_entity.id, user.id) AS author_edits\n                FROM entity\n                JOIN uuid ON uuid.id = entity.id\n                JOIN instance ON entity.instance_id = instance.id\n                JOIN type on entity.type_id = type.id\n                JOIN license on license.id = entity.license_id\n                JOIN entity_revision ON entity.current_revision_id = entity_revision.id\n                LEFT JOIN entity_revision_field field_title on\n                    field_title.entity_revision_id = entity_revision.id AND\n                    field_title.field = \"title\"\n                LEFT JOIN entity_revision_field field_description on\n                    field_description.entity_revision_id = entity_revision.id AND\n                    field_description.field = \"meta_description\"\n                JOIN term_taxonomy_entity on term_taxonomy_entity.entity_id = entity.id\n                JOIN term_taxonomy on term_taxonomy_entity.term_taxonomy_id = term_taxonomy.id\n                JOIN term on term_taxonomy.term_id = term.id\n                JOIN entity_revision all_revisions_of_entity ON all_revisions_of_entity.repository_id = entity.id\n                JOIN user ON all_revisions_of_entity.author_id = user.id\n                JOIN subject_mapping on subject_mapping.term_taxonomy_id = term_taxonomy_entity.term_taxonomy_id\n                WHERE entity.id > ?\n                    AND (? is NULL OR instance.subdomain = ?)\n                    AND (? is NULL OR entity_revision.date > ?)\n                    AND uuid.trashed = 0\n                    AND type.name IN (\"applet\", \"article\", \"course\", \"text-exercise\",\n                                      \"text-exercise-group\", \"video\")\n                    AND NOT subject_mapping.subject_id = 146728\n                GROUP BY entity.id\n                ORDER BY entity.id\n                LIMIT ?\n            ",
  "describe": {
    "columns": [
      {
        "ordinal": 0,
        "name": "id",
        "type_info": {
          "type": "LongLong",
          "flags": "NOT_NULL | PRIMARY_KEY | MULTIPLE_KEY | NO_DEFAULT_VALUE",
          "char_set": 63,
          "max_size": 20
        }
      },
      {
        "ordinal": 1,
        "name": "subject_ids",
        "type_info": {
          "type": "Json",
          "flags": "BINARY",
          "char_set": 224,
          "max_size": 4294967292
        }
      },
      {
        "ordinal": 2,
        "name": "resource_type",
        "type_info": {
          "type": "VarString",
          "flags": "NOT_NULL | UNIQUE_KEY | NO_DEFAULT_VALUE",
          "char_set": 224,
          "max_size": 1020
        }
      },
      {
        "ordinal": 3,
        "name": "title",
        "type_info": {
          "type": "Blob",
          "flags": "",
          "char_set": 224,
          "max_size": 4294967295
        }
      },
      {
        "ordinal": 4,
        "name": "description",
        "type_info": {
          "type": "Blob",
          "flags": "",
          "char_set": 224,
          "max_size": 4294967295
        }
      },
      {
        "ordinal": 5,
        "name": "date_created",
        "type_info": {
          "type": "Timestamp",
          "flags": "NOT_NULL | BINARY | TIMESTAMP",
          "char_set": 63,
          "max_size": 19
        }
      },
      {
        "ordinal": 6,
        "name": "date_modified",
        "type_info": {
          "type": "Timestamp",
          "flags": "NOT_NULL | BINARY | TIMESTAMP",
          "char_set": 63,
          "max_size": 19
        }
      },
      {
        "ordinal": 7,
        "name": "version",
        "type_info": {
          "type": "Long",
          "flags": "",
          "char_set": 63,
          "max_size": 11
        }
      },
      {
        "ordinal": 8,
        "name": "license_url",
        "type_info": {
          "type": "VarString",
          "flags": "NOT_NULL | NO_DEFAULT_VALUE",
          "char_set": 224,
          "max_size": 1020
        }
      },
      {
        "ordinal": 9,
        "name": "original_author_url",
        "type_info": {
          "type": "VarString",
          "flags": "",
          "char_set": 224,
          "max_size": 1020
        }
      },
      {
        "ordinal": 10,
        "name": "instance",
        "type_info": {
          "type": "VarString",
          "flags": "NOT_NULL | NO_DEFAULT_VALUE",
          "char_set": 224,
          "max_size": 40
        }
      },
      {
        "ordinal": 11,
        "name": "taxonomy_term_ids",
        "type_info": {
          "type": "Json",
          "flags": "BINARY",
          "char_set": 224,
          "max_size": 4294967292
        }
      },
      {
        "ordinal": 12,
        "name": "term_names",
        "type_info": {
          "type": "Json",
          "flags": "BINARY",
          "char_set": 224,
          "max_size": 4294967292
        }
      },
      {
        "ordinal": 13,
        "name": "authors",
        "type_info": {
          "type": "Json",
          "flags": "BINARY",
          "char_set": 224,
          "max_size": 4294967292
        }
      },
      {
        "ordinal": 14,
        "name": "author_edits",
        "type_info": {
          "type": "Json",
          "flags": "BINARY",
          "char_set": 224,
          "max_size": 4294967292
        }
      }
    ],
    "parameters": {
      "Right": 6
    },
    "nullable": [
      false,
      true,
      false,
      true,
      true,
      false,
      false,
      true,
      false,
      true,
      false,
      true,
      true,
      true,
      true
    ]
  },
  "hash": "860534b449ac77c8313b216531f14e64ef7932da5bd5ee3cd058b87938b8d52f"
}
