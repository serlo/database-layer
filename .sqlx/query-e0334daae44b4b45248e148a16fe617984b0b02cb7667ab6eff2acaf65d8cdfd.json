{
  "db_name": "MySQL",
  "query": "\n                WITH RECURSIVE descendants AS (\n                    SELECT id, parent_id\n                    FROM term_taxonomy\n                    WHERE (? is null OR id = ?)\n\n                    UNION\n\n                    SELECT tt.id, tt.parent_id\n                    FROM term_taxonomy tt\n                    JOIN descendants d ON tt.parent_id = d.id\n                ), subject_entities AS (\n                SELECT id as entity_id FROM descendants\n\n                UNION\n\n                SELECT tte.entity_id\n                FROM descendants\n                JOIN term_taxonomy_entity tte ON descendants.id = tte.term_taxonomy_id\n\n                UNION\n\n                SELECT entity_link.child_id\n                FROM descendants\n                JOIN term_taxonomy_entity tte ON descendants.id = tte.term_taxonomy_id\n                JOIN entity_link ON entity_link.parent_id = tte.entity_id\n\n                UNION\n\n                SELECT entity_link.child_id\n                FROM descendants\n                JOIN term_taxonomy_entity tte ON descendants.id = tte.term_taxonomy_id\n                JOIN entity_link parent_link ON parent_link.parent_id = tte.entity_id\n                JOIN entity_link ON entity_link.parent_id = parent_link.child_id\n                )\n                SELECT comment.id\n                FROM comment\n                JOIN uuid ON uuid.id = comment.id\n                JOIN comment answer ON comment.id = answer.parent_id OR\n                    comment.id = answer.id\n                JOIN uuid parent_uuid ON parent_uuid.id = comment.uuid_id\n                JOIN subject_entities ON subject_entities.entity_id = comment.uuid_id\n                WHERE\n                    comment.uuid_id IS NOT NULL\n                    AND uuid.trashed = 0\n                    AND comment.archived = 0\n                    AND (? is null OR comment.instance_id = ?)\n                    AND parent_uuid.discriminator != \"user\"\n                GROUP BY comment.id\n                HAVING MAX(GREATEST(answer.date, comment.date)) < ?\n                ORDER BY MAX(GREATEST(answer.date, comment.date)) DESC\n                LIMIT ?;\n            ",
  "describe": {
    "columns": [
      {
        "ordinal": 0,
        "name": "id",
        "type_info": {
          "type": "LongLong",
          "flags": "NOT_NULL | PRIMARY_KEY | MULTIPLE_KEY | NO_DEFAULT_VALUE",
          "char_set": 63,
          "max_size": 20
        }
      }
    ],
    "parameters": {
      "Right": 6
    },
    "nullable": [
      false
    ]
  },
  "hash": "e0334daae44b4b45248e148a16fe617984b0b02cb7667ab6eff2acaf65d8cdfd"
}
